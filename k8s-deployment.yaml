apiVersion: apps/v1
kind: Deployment
metadata:
  name: tbot-deployment
  labels:
    app: tbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tbot
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: tbot-template
      labels:
        app: tbot
    spec:
      containers:
      - name: tbot
        image: akrush/tbot:v9-nocmd
        env:
        - name: LANG
          value: "C.UTF-8"
        command: [ "/bin/bash", "-ce", "cd /tbot/&&ls -A1|xargs rm -rf \
&& /usr/bin/git clone https://github.com/akrush24/telegram_bot.git /tbot \
&& ln -s /tbot2/passwd.py /tbot/passwd.py \
&& pip3 install -r /tbot/requirements.txt \
&& /tbot/bot.py 1>/var/log/1.log 2>/var/log/tbot/2.log" ]
        volumeMounts:
        - name: passwd
          mountPath: "/tbot2"
          readOnly: true
        - name: ssh-keys
          mountPath: "/root/.ssh2"
        - name: share
          mountPath: "/tbot"
        - name: logs
          mountPath: "/var/log/tbot"
      - name: git
        image: akrush/tbot:alpine-git
        command: ["/bin/bash", "-ce", "mkdir /root/.ssh/ \
&&  cp /root/.ssh2/id_rsa* /root/.ssh/ && chmod 600 -R /root/.ssh \
&& echo -e 'Host * \n StrictHostKeyChecking no' > /root/.ssh/config \
&& cd /tbot/inventory_json/ \
&& while true;do git archive --remote=git@gitlab.akb-it.ru:INFRA/inventory_json.git HEAD | tar xvf - vmware.json 1>>/var/log/tbot/tbot.log 2>&1;sleep 10;done" ]
        volumeMounts:
        - name: share
          mountPath: "/tbot"
        - name: ssh-keys
          mountPath: "/root/.ssh2"
        - name: logs
          mountPath: "/var/log/tbot/"
      - name: logs
        image: alpine:latest
        command: ["/bin/sh", "-ce", "/bin/echo logs-started >> /var/log/tbot/tbot.log && /usr/bin/tail -f /var/log/tbot/tbot.log"]
        volumeMounts:
        - name: logs
          mountPath: "/var/log/tbot"
      volumes:
      - name: passwd
        secret:
          secretName: tbot-passwd.py
      - name: ssh-keys
        secret:
          secretName: tbot-ssh-key
          defaultMode: 400
      - name: share
        emptyDir: {}
      - name: logs
        emptyDir: {}

#---
#
#apiVersion: v1
#data:
#  passwd.py: <YOU passwd.py in BASE64 forman (cat passwd.py|base64)>
#kind: Secret
#metadata:
#  name: tbot-passwd.py
#type: Opaque

#---
#apiVersion: v1
#data:
#  id_rsa: <YOU id_rsa: in BASE64 forman (cat id_rsa|base64)>
#  id_rsa.pub: <YOU id_rsa.pub: in BASE64 forman (cat id_rsa.pub|base64)>
#kind: Secret
#metadata:
#  name: tbot-ssh-key
#type: Opaque

